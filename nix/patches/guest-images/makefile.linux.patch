--- a/Makefile.linux
+++ b/Makefile.linux
@@ -96,7 +96,7 @@ define TEMPLATE_BASE_UBUNTU_LINUX_IMAGE
 		-serial file:$(TMPDIR)/$1/serial.txt \
 		-kernel $(TMPDIR)/$1/vmlinuz \
 		-initrd $(TMPDIR)/$1/initrd \
-		-append autoinstall
+		-append 'autoinstall console=ttyS0'
 endef

 ### Installing the kernel and S2E payload ###
@@ -123,7 +123,7 @@ define BUILD_S2E_IMAGE
 	    $(call QEMU_HD,0,$$@) \
 	    -serial file:$(OUTDIR)/$2$1/serial.txt

-	virt-copy-in -a "$$@" $(S2E_INSTALL_ROOT)/bin/guest-tools32/* /home/s2e/
+	virt-copy-in -a "$$@" $(S2E_INSTALL_ROOT)/bin/guest-tools$4/* /home/s2e/

   # This rule extracts all executable files from the guest image into the guestfs folder.
   # This is useful for S2E plugins that need access to the binaries in order to extract
@@ -178,33 +178,11 @@ endef

 ### Building Linux kernel ###

-# We need a special docker image to build the decree kernel.
-# Its docker file ends with i386cgc, so we grep the image name for cgc
-# and paste what we find to the architecture in order to build
-# the right docker image.
-CGCARCH=$(findstring cgc,$(1))
-
-# This creates the base docker image inside which the kernel will be built
-$(STAMPS)/linux-build-%:
-	$(call INFO_MSG,[$@] Building docker image...)
-	mkdir -p $(STAMPS)
-	cd $(SRC)/Linux/docker && docker build -t linux-build-$(call ARCH,$@) -f Dockerfile.$(call ARCH,$@) .
-	touch $@
-
-# Build the kernel
 define TEMPLATE_LINUX_KERNEL
-  $(STAMPS)/$1-$2: $(STAMPS)/linux-build-$2$(call CGCARCH,$1) | $(TMPDIR)
-	$(call INFO_MSG,[$$@] Building kernel...)
-	rsync -a $(S2E_LINUX_KERNELS_ROOT)/$1 $(TMPDIR)/$1-$2
-	cd $(TMPDIR)/$1-$2/$1 && mv config-$2 .config
-
-	# Remove old builds
-	rm -rf $(TMPDIR)/$1-$2/*.deb
-
-	$(SRC)/Linux/docker/run-docker.sh $(SRC) $(S2E_LINUX_KERNELS_ROOT) linux-build-$2$(call CGCARCH,$1) \
-	    $(TMPDIR)/$1-$2/$1 \
-	    $(SRC)/Linux/docker/make-kernel.sh \
-	       $(S2E_LINUX_KERNELS_ROOT)/include $(shell id -u) $(shell id -g)
+  $(STAMPS)/$1-$2: | $(TMPDIR)
+	mkdir -p $(STAMPS)
+	$(call INFO_MSG,[$$@] Copying kernel...)
+	copy_nix_built_linux_kernel $1-$2 $(TMPDIR)/$1-$2
 	touch $$@
 endef

@@ -237,16 +215,16 @@ $(eval $(call TEMPLATE_LINUX_KERNEL,linux-4.9.3,x86_64))

 # Rules for building different images
 # TODO: cgc image is treated in an adhoc manner, try to factor it out somehow
-$(eval $(call BUILD_S2E_IMAGE,cgc_debian-9.2.1-i386,,decree-cgc-cfe-i386))
+$(eval $(call BUILD_S2E_IMAGE,cgc_debian-9.2.1-i386,,decree-cgc-cfe-i386,32))
 $(eval $(call TAKE_SNAPSHOT,cgc_debian-9.2.1-i386,))

-$(eval $(call BUILD_S2E_IMAGE,debian-11.3-i386,,linux-4.9.3-i386))
+$(eval $(call BUILD_S2E_IMAGE,debian-11.3-i386,,linux-4.9.3-i386,32))
 $(eval $(call TAKE_SNAPSHOT,debian-11.3-i386,))

-$(eval $(call BUILD_S2E_IMAGE,debian-11.3-x86_64,,linux-4.9.3-x86_64))
+$(eval $(call BUILD_S2E_IMAGE,debian-11.3-x86_64,,linux-4.9.3-x86_64,64))
 $(eval $(call TAKE_SNAPSHOT,debian-11.3-x86_64,))

-$(eval $(call BUILD_S2E_IMAGE,ubuntu-22.04-x86_64,,linux-4.9.3-x86_64))
+$(eval $(call BUILD_S2E_IMAGE,ubuntu-22.04-x86_64,,linux-4.9.3-x86_64,64))
 $(eval $(call TAKE_SNAPSHOT,ubuntu-22.04-x86_64,))

 ### Top level rules ###
